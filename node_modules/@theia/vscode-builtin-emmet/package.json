{
  "_from": "@theia/vscode-builtin-emmet",
  "_id": "@theia/vscode-builtin-emmet@0.1.0",
  "_inBundle": false,
  "_integrity": "sha512-dQKhRT5/pp1VAsd0glF69Yt4OZ4JE3tGM2CGvjSE2eE1GJckbQHnQTGvKd6BSVBhXMGYKta1ynbBf0Q/a36mpQ==",
  "_location": "/@theia/vscode-builtin-emmet",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "@theia/vscode-builtin-emmet",
    "name": "@theia/vscode-builtin-emmet",
    "escapedName": "@theia%2fvscode-builtin-emmet",
    "scope": "@theia",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@theia/vscode-builtin-emmet/-/vscode-builtin-emmet-0.1.0.tgz",
  "_shasum": "6988fd75a3dbe4362e1ac1273a3634fb21a3a930",
  "_spec": "@theia/vscode-builtin-emmet",
  "_where": "/workspace/wk33challenge",
  "activationEvents": [
    "*",
    "onCommand:emmet.expandAbbreviation",
    "onLanguage:html",
    "onLanguage:css",
    "onLanguage:scss",
    "onLanguage:less"
  ],
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-emmet/issues"
  },
  "bundleDependencies": false,
  "categories": [
    "Other"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Emmet",
      "properties": {
        "emmet.showExpandedAbbreviation": {
          "type": [
            "string"
          ],
          "enum": [
            "never",
            "always",
            "inMarkupAndStylesheetFilesOnly"
          ],
          "default": "always",
          "markdownDescription": "%emmetShowExpandedAbbreviation%"
        },
        "emmet.showAbbreviationSuggestions": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "%emmetShowAbbreviationSuggestions%"
        },
        "emmet.includeLanguages": {
          "type": "object",
          "default": {},
          "markdownDescription": "%emmetIncludeLanguages%"
        },
        "emmet.variables": {
          "type": "object",
          "properties": {
            "lang": {
              "type": "string",
              "default": "en"
            },
            "charset": {
              "type": "string",
              "default": "UTF-8"
            }
          },
          "default": {},
          "description": "%emmetVariables%"
        },
        "emmet.syntaxProfiles": {
          "type": "object",
          "default": {},
          "description": "%emmetSyntaxProfiles%"
        },
        "emmet.excludeLanguages": {
          "type": "array",
          "default": [
            "markdown"
          ],
          "description": "%emmetExclude%"
        },
        "emmet.extensionsPath": {
          "type": "string",
          "default": null,
          "description": "%emmetExtensionsPath%"
        },
        "emmet.triggerExpansionOnTab": {
          "type": "boolean",
          "default": false,
          "description": "%emmetTriggerExpansionOnTab%"
        },
        "emmet.preferences": {
          "type": "object",
          "default": {},
          "description": "%emmetPreferences%",
          "properties": {
            "css.intUnit": {
              "type": "string",
              "default": "px",
              "description": "%emmetPreferencesIntUnit%"
            },
            "css.floatUnit": {
              "type": "string",
              "default": "em",
              "description": "%emmetPreferencesFloatUnit%"
            },
            "css.propertyEnd": {
              "type": "string",
              "default": ";",
              "description": "%emmetPreferencesCssAfter%"
            },
            "sass.propertyEnd": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesSassAfter%"
            },
            "stylus.propertyEnd": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesStylusAfter%"
            },
            "css.valueSeparator": {
              "type": "string",
              "default": ": ",
              "description": "%emmetPreferencesCssBetween%"
            },
            "sass.valueSeparator": {
              "type": "string",
              "default": ": ",
              "description": "%emmetPreferencesSassBetween%"
            },
            "stylus.valueSeparator": {
              "type": "string",
              "default": " ",
              "description": "%emmetPreferencesStylusBetween%"
            },
            "bem.elementSeparator": {
              "type": "string",
              "default": "__",
              "description": "%emmetPreferencesBemElementSeparator%"
            },
            "bem.modifierSeparator": {
              "type": "string",
              "default": "_",
              "description": "%emmetPreferencesBemModifierSeparator%"
            },
            "filter.commentBefore": {
              "type": "string",
              "default": "",
              "description": "%emmetPreferencesFilterCommentBefore%"
            },
            "filter.commentAfter": {
              "type": "string",
              "default": "\n<!-- /[#ID][.CLASS] -->",
              "description": "%emmetPreferencesFilterCommentAfter%"
            },
            "filter.commentTrigger": {
              "type": "array",
              "default": [
                "id",
                "class"
              ],
              "description": "%emmetPreferencesFilterCommentTrigger%"
            },
            "format.noIndentTags": {
              "type": "array",
              "default": [
                "html"
              ],
              "description": "%emmetPreferencesFormatNoIndentTags%"
            },
            "format.forceIndentationForTags": {
              "type": "array",
              "default": [
                "body"
              ],
              "description": "%emmetPreferencesFormatForceIndentTags%"
            },
            "profile.allowCompactBoolean": {
              "type": "boolean",
              "default": false,
              "description": "%emmetPreferencesAllowCompactBoolean%"
            },
            "css.webkitProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssWebkitProperties%"
            },
            "css.mozProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssMozProperties%"
            },
            "css.oProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssOProperties%"
            },
            "css.msProperties": {
              "type": "string",
              "default": null,
              "markdownDescription": "%emmetPreferencesCssMsProperties%"
            },
            "css.fuzzySearchMinScore": {
              "type": "number",
              "default": 0.3,
              "description": "%emmetPreferencesCssFuzzySearchMinScore%"
            }
          }
        },
        "emmet.showSuggestionsAsSnippets": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "%emmetShowSuggestionsAsSnippets%"
        },
        "emmet.optimizeStylesheetParsing": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "%emmetOptimizeStylesheetParsing%"
        }
      }
    },
    "commands": [
      {
        "command": "editor.emmet.action.wrapIndividualLinesWithAbbreviation",
        "title": "%command.wrapIndividualLinesWithAbbreviation%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.wrapWithAbbreviation",
        "title": "%command.wrapWithAbbreviation%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.removeTag",
        "title": "%command.removeTag%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.updateTag",
        "title": "%command.updateTag%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.matchTag",
        "title": "%command.matchTag%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.balanceIn",
        "title": "%command.balanceIn%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.balanceOut",
        "title": "%command.balanceOut%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.prevEditPoint",
        "title": "%command.prevEditPoint%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.nextEditPoint",
        "title": "%command.nextEditPoint%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.mergeLines",
        "title": "%command.mergeLines%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.selectPrevItem",
        "title": "%command.selectPrevItem%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.selectNextItem",
        "title": "%command.selectNextItem%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.splitJoinTag",
        "title": "%command.splitJoinTag%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.toggleComment",
        "title": "%command.toggleComment%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.evaluateMathExpression",
        "title": "%command.evaluateMathExpression%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.updateImageSize",
        "title": "%command.updateImageSize%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.incrementNumberByOneTenth",
        "title": "%command.incrementNumberByOneTenth%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.incrementNumberByOne",
        "title": "%command.incrementNumberByOne%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.incrementNumberByTen",
        "title": "%command.incrementNumberByTen%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.decrementNumberByOneTenth",
        "title": "%command.decrementNumberByOneTenth%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.decrementNumberByOne",
        "title": "%command.decrementNumberByOne%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.decrementNumberByTen",
        "title": "%command.decrementNumberByTen%",
        "category": "Emmet"
      },
      {
        "command": "editor.emmet.action.reflectCSSValue",
        "title": "%command.reflectCSSValue%",
        "category": "Emmet"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "editor.emmet.action.wrapIndividualLinesWithAbbreviation",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.wrapWithAbbreviation",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.removeTag",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.updateTag",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.matchTag",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.balanceIn",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.balanceOut",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.prevEditPoint",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.nextEditPoint",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.mergeLines",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.selectPrevItem",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.selectNextItem",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.splitJoinTag",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.toggleComment",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.evaluateMathExpression",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.updateImageSize",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.incrementNumberByOneTenth",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.incrementNumberByOne",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.incrementNumberByTen",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.decrementNumberByOneTenth",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.decrementNumberByOne",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.decrementNumberByTen",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        },
        {
          "command": "editor.emmet.action.reflectCSSValue",
          "when": "resourceScheme =~ /^untitled$|^file$/"
        }
      ]
    }
  },
  "dependencies": {
    "@emmetio/css-parser": "github:ramya-rao-a/css-parser#vscode",
    "@emmetio/html-matcher": "^0.3.3",
    "@emmetio/math-expression": "^0.1.1",
    "image-size": "^0.5.2",
    "vscode-emmet-helper": "^1.2.12"
  },
  "deprecated": false,
  "description": "%description%",
  "devDependencies": {
    "@types/node": "8.0.33",
    "mocha-junit-reporter": "^1.17.0",
    "mocha-multi-reporters": "^1.1.7",
    "vscode": "1.0.1"
  },
  "displayName": "Emmet",
  "engines": {
    "vscode": "^1.13.0"
  },
  "homepage": "https://github.com/Microsoft/vscode-emmet#readme",
  "icon": "images/icon.png",
  "main": "./dist/extension",
  "name": "@theia/vscode-builtin-emmet",
  "publisher": "vscode",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/vscode-emmet.git"
  },
  "scripts": {
    "compile": "gulp compile-extension:emmet"
  },
  "version": "0.1.0"
}
